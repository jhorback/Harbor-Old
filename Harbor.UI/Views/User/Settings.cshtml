@model Harbor.UI.Models.Setting.SettingsViewModel
@using Harbor.UI.Extensions
@using Harbor.UI.JSPkgs
@using Harbor.UI.Models.JSPM.Extensions
@{
	ViewBag.Title = "Website Settings";
}
@section scripts {
	@Html.InstallJavaScriptPackage(SettingsAppPkg.PackageName)
	<script>
		Settings.start({ themes: @Html.Raw(Json.Encode(Model.Themes)) });
	</script>
}
<section id="settings-main" class="page centered">
	<div class="page-header">
		<h1>Website Settings</h1>
	</div>
	<div class="page-body">
		<div class="page-content hide">
			@if (Model.CanUpdateSiteSettings)
			{
				<fieldset>
					<legend>Navigation</legend>
					<div class="pad-top settings-navigation">
						<button id="settings-updatenav">Update navigation</button>
						<div class="attn" id="settings-updatemsg">
							
						</div>
						<div class="quiet">
							Update the website navigation.
						</div>
					</div>
				</fieldset>
			}
			@if (Model.CanViewUsers)
			{
				<fieldset>
					<legend>Website users</legend>
					<div>
						<a href="~/User/Admin">User Administration</a>
					</div>
					<div>
						<p>
							Add, edit, update users and their permissions.
						</p>
					</div>
				</fieldset>
			}
			@if (Model.CanUpdateSiteSettings)
			{
				<fieldset>
					<legend>Home page</legend>
					<div class="pad settings-homepage">
						@if (Model.HomePage != null)
						{
							@Html.Partial("~/Views/User/_HomePageSetting.cshtml", Model.HomePage)
						}
						else
						{
							@Html.Partial("~/Views/User/_DefaultHomePage.cshtml")
						}
					</div>
					<div>
						<button id="settings-changehome">Change the home page</button>
						<button id="settings-resethome" class="@(Model.HomePage == null ? "hide" : "")">Reset</button>
					</div>
				</fieldset>
							
			}
			@if (Model.CanUpdateSystemSettings)
			{
				<fieldset>
					<legend>Theme</legend>
					<div class="form-field">
						<select name="theme" id="settings-theme" style="min-width:auto;">
							@foreach (var theme in Model.Themes)
							{
								<option @(theme == Model.Theme ? "selected" : "")>@theme</option>
							}
						</select>
					</div>
				</fieldset>
			}
			@if (Model.CanUpdateSiteSettings)
			{
				<fieldset>
					<legend>Sign in link</legend>
					<div class="form-field">
						<input type="checkbox" name="showSignInLink" id="showSignInLink">
						<label for="showSignInLink">Show the sign in link</label>
					</div>
					<div>
						<p>
							If it is hidden, you can go to
							<a href="~/user/signin">@Url.Content("~/user/signin")</a> to sign in.
						</p>
					</div>
				</fieldset>
			}
			@if (Model.CanUpdateSystemSettings)
			{ 
				<fieldset class="clear">
					<legend>Application name</legend>
					<div class="pad">
						<div class="form-field editable" tabindex="0" id="settings-applicationName">
							<span data-bind="applicationName"></span>
						</div>
					</div>
				</fieldset>
				<fieldset>
					<legend>Development</legend>
					<div class="pad-left">
						<a href="@Url.Action("Index", "StyleGuide")">Style Guide</a>
					</div>
					<div class="pad-left">
						<a href="@Url.Action("JavaScriptPackages", "Home")">JavaScript Packages</a>
					</div>
					<div class="pad-left">
						<a href="@Url.Action("JavaScriptTests", "Home")">JavaScript Tests</a>
					</div>
				</fieldset>
			}
		</div>
	</div>
</section>
<div id="settings-modal"></div>