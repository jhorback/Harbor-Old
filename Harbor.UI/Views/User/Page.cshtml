@using Harbor.Domain.Pages
@using Harbor.UI.Extensions
@using Harbor.UI.Models.JSPM.Extensions
@using Harbor.UI.JSPkgs
@model Harbor.Domain.Pages.Page
@{
	ViewBag.Title = Model.Title;
	bool noAside = Model.Template.Layout.HasFlag(LayoutProperties.NoAside);
	var layoutClassNames = "page";
	if (Model.Template.Layout.HasFlag(LayoutProperties.ContentCentered))
	{
		layoutClassNames = " page centered";
	}
	else if (Model.Template.Layout.HasFlag(LayoutProperties.ContentReadable))
	{
		layoutClassNames = "page readable";
	}
}
@section scripts {
	@if (ViewBag.HasWritePermissions)
	{ 
		@Html.InstallJavaScriptPackage(PageEditorAppPkg.PackageName)
		@Html.InstallJavaScriptPackage(PageLoaderAppPkg.PackageName)
		<script>
			PageLoader.start(@Html.Raw(Json.Encode(ViewBag.PageDto)));
		</script>
	}
}
<div id="page" class="@layoutClassNames">
	<header class="page-header ">
		@if (Model.Template.Header != null)
		{
			var header = Model.Template.Header;
			<div class="uic" id="@Model.Template.Header.uicid" data-type="@Model.Template.Header.key">
				@Html.PageComponent(Model.PageID, header.key, header.uicid)
			</div>
		}
	</header>
	<div class="page-body">
		@if (noAside == false)
		{
			<aside class="page-aside">
				@foreach (var item in Model.Template.Aside)
				{
					<div class="uic" id="@item.uicid" data-type="@item.key">
						@Html.PageComponent(Model.PageID, item.key, item.uicid)
					</div>	
				}
			</aside>
		}
		<div class="page-content">
			@foreach (var item in Model.Template.Content)
			{
				<div class="uic @String.Join(" ", item.classNames)" id="@item.uicid" data-type="@item.key">
					@Html.PageComponent(Model.PageID, item.key, item.uicid)
				</div>
			}
		</div>
		<div class="pad quiet float-right">@* jch* testing - remove when ready*@
			Author: @Model.AuthorsUserName <br/>
			Created: @Model.Created.ToShortDateString() <br/>
			Modified: @Model.Modified.ToShortDateString()
		</div>
	</div>
</div>
<div id="page-modal"></div>