@using Harbor.Domain.Pages
@using Harbor.UI.Extensions
@model Harbor.Domain.Pages.Page
@{
	ViewBag.Title = Model.Title;
	bool noAside = Model.Layout.DisplayProperties.HasFlag(PageLayout.LayoutDisplayProperties.NoAside);
	var layoutClassNames = "page";
	if (Model.Layout.DisplayProperties.HasFlag(PageLayout.LayoutDisplayProperties.ContentCentered))
	{
		layoutClassNames = "page centered";
	}
	layoutClassNames += noAside ? " noaside" : " hasaside";
}
@if (string.IsNullOrEmpty(Model.TitleBackgroundUrl) == false)
{
	<style>
			.page-header {
				height: 10em;
				background-image: url("@Model.TitleBackgroundUrl");
			}
	</style>
}
<div @*id="page"*@ class="@layoutClassNames">
	<header class="page-header">
		@if (string.IsNullOrEmpty(Model.TitleBackgroundUrl) == false)
		{
			<div class="page-header-overlay"></div>
		}
		<div class="page-header-content">
			@if (Model.Layout.HeaderKey != null)
			{
				var header = Model.Layout.HeaderKey;
				<div class="uic" data-type="@header" id="@Model.Layout.Header.Id">
					@Html.PageComponent(Model.PageID, header)
				</div>
			}
		</div>
	</header>
	<div class="page-aside-bg">
		<div class="page-body">
			<aside class="page-aside">
				@if (Model.Layout.AsideKey != null)
				{
					var aside = Model.Layout.AsideKey;
					<div class="uic" data-type="@aside" id="@Model.Layout.Aside.Id">
						@Html.PageComponent(Model.PageID, aside)
					</div>
				}
			</aside>
			<div class="page-content">
				<div class="row">
					@for (int index = 0; index < Model.Template.Content.Count; index++)
					{
						var item = Model.Template.Content[index];
						if (item.StartsNewRow && index != 0)
						{
							@Html.Raw("</div><div class=\"row\">")
						}
						<div class="uic @String.Join(" ", item.ClassNames)" id="@item.Id" data-type="@item.Key">
							@Html.PageComponent(Model.PageID, item.Key, item.Id)
						</div>
					}
				</div>
			</div>
		</div>
	</div>
</div>
<div id="page-modal"></div>